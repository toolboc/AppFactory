//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Expression.Blend.SampleData.ReaderPageSampleData
{
    using System;

    // To significantly reduce the sample data footprint in your production application, you can set
    // the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
	internal class ReaderPageSampleData { }
#else

    public class ReaderPageSampleData : System.ComponentModel.INotifyPropertyChanged
    {
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged(string propertyName)
        {
            if (this.PropertyChanged != null)
            {
                this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        public ReaderPageSampleData()
        {
            try
            {
                System.Uri resourceUri = new System.Uri("/InfoHubPhone8;component/SampleData/ReaderPageSampleData/ReaderPageSampleData.xaml", System.UriKind.Relative);
                if (System.Windows.Application.GetResourceStream(resourceUri) != null)
                {
                    System.Windows.Application.LoadComponent(this, resourceUri);
                }
            }
            catch (System.Exception)
            {
            }
        }

        private Links _Links = new Links();

        public Links Links
        {
            get
            {
                return this._Links;
            }
        }
    }

    public class LinksItem : System.ComponentModel.INotifyPropertyChanged
    {
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged(string propertyName)
        {
            if (this.PropertyChanged != null)
            {
                this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        private string _Caption = string.Empty;

        public string Caption
        {
            get
            {
                return this._Caption;
            }

            set
            {
                if (this._Caption != value)
                {
                    this._Caption = value;
                    this.OnPropertyChanged("Caption");
                }
            }
        }

        private string _Url = string.Empty;

        public string Url
        {
            get
            {
                return this._Url;
            }

            set
            {
                if (this._Url != value)
                {
                    this._Url = value;
                    this.OnPropertyChanged("Url");
                }
            }
        }
    }

    public class Links : System.Collections.ObjectModel.ObservableCollection<LinksItem>
    {
    }
#endif
}
