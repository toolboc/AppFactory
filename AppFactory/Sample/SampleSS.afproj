<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="All" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- 
  This project makes use of the MSBuild Extension Pack. You can read more about that 
  project here: http://msbuildextensionpack.codeplex.com/
  -->
  
  <UsingTask AssemblyFile="Tasks\AppFactory.Tasks.dll" TaskName="AppFactory.Tasks.DbRowsToItems" />
  <UsingTask AssemblyFile="Tasks\AppFactory.Tasks.dll" TaskName="AppFactory.Tasks.OleDbExecute" />
  <UsingTask AssemblyFile="Tasks\AppFactory.Tasks.WindowsPhone.dll" TaskName="AppFactory.Tasks.WindowsPhone.WPDevice" />
  <UsingTask AssemblyFile="Tasks\MSBuild.ExtensionPack.dll" TaskName="MSBuild.ExtensionPack.UI.Dialog" />


  <!-- 
  The following properties are updated dynamically by the UI tool. They can also be edited manually.
  -->
  <PropertyGroup Label="UISettings">

    <!-- The method used to select which applications should be built. [All, NotBuiltSince, WhereQuery or CustomQuery] -->
    <AppSelectMethod>All</AppSelectMethod>

    <!-- The 'WHERE' clause used to select applications when AppSelectMethod is set to 'WhereQuery' -->
    <WhereQuery>AppName='Texans'</WhereQuery>

    <!-- The custom query used to select applications when AppSelectMethod is set to 'CustomQuery' -->
    <CustomQuery>SELECT * FROM Applications</CustomQuery>

    <!-- The date used to select applications when AppSelectMethod is set to 'NotBuiltSince' -->
    <!-- The UI front-end stores this value as UTC time so that times will be correct even across timezones. -->
    <!-- Locally formatted values (e.g. '1/22/2012 4:32 PM') are acceptable but will not account for timezone changes. -->
    <DateQuery>2011-12-27T06:00:00Z</DateQuery>

    <!-- The verbosity of the build when started from the UI tool. [Quiet, Minimal, Normal, Detailed, Diagnostic]  -->
    <Verbosity>Minimal</Verbosity>

  </PropertyGroup>

  
  <!-- 
  The following properties are project settings that should be edited in this file. 
  -->
  <PropertyGroup Label="ProjectSettings">

    <!-- The name of the table where Application data is stored. -->
    <AppTable Condition="'$(AppTable)'==''">Applications</AppTable>

    <!-- Debug or Release. -->
    <Configuration>Release</Configuration>

    <!-- The name of the database file where Application data is stored. -->
    <AppDbFile>Sample.accdb</AppDbFile>

    <!-- The connection string that will be used to connect to the application database. -->
    <ConnectionString>Provider=Microsoft.ACE.OLEDB.12.0;Data Source=$(AppDbFile)</ConnectionString>

    <!-- The path where application-specific assets can be found. (This folder should include sub-folders that match Application.AppName -->
    <AssetsPath>Assets</AssetsPath>

    <!-- The path that will be used for combining assets and building the template. -->
    <WorkingPath>Working</WorkingPath>

    <!-- The path that will be used for completed builds. -->
    <OutputPath>Output</OutputPath>

    <!-- The DateQuery parameter above is stored in UTC but Access is very picky about the format of dates passed to it. -->
    <!-- This method converts the DateQuery stored above it into the format Access needs. This step can be skipped for SQL Server. -->
    <AccessDateQuery>$([System.DateTime]::Parse($(DateQuery)).ToString("yyyy-MM-dd HH:mm:ss"))</AccessDateQuery>

    <!-- The SQL statement that will be used to obtain Application data. This is driven from the properties in the 'UISettings' property group above. -->
    <AppQuery Condition="'$(AppSelectMethod)'=='All'">SELECT * FROM $(AppTable)</AppQuery>
    <AppQuery Condition="'$(AppSelectMethod)'=='CustomQuery'">$(CustomQuery)</AppQuery>
    <AppQuery Condition="'$(AppSelectMethod)'=='NotBuiltSince'">SELECT * FROM $(AppTable) WHERE LastBuilt IS NULL OR LastBuilt &lt;= #$(AccessDateQuery)#</AppQuery>
    <AppQuery Condition="'$(AppSelectMethod)'=='WhereQuery'">SELECT * FROM $(AppTable) WHERE $(WhereQuery)</AppQuery>

  </PropertyGroup>

  
  
  <!--
  "LoadData" is used as a dependency below. It's function is mainly to call a custom 
  MSBuildTask that loads rows from our database into MSBuild items that we can then 
  drive the remaining build task off of.
  -->
  <Target Name="LoadData">
    <Message Text="Loading application data from the database..." />
    
    <!--
    DbRowsToItems will connect to the database found at ConnectionString and execute 
    the statement in Query. Any rows that are returned will be converted to TaskItem 
    instances with metadata properties set to corresponding column names and values.
    
    TaskItem requires an ItemSpec, which is like specifying which "type" of object the 
    item represents.
    
    Finally, the items that were generatred are returned via the Items output 
    property. This property is copied to a MSBuild variable using the Output statement 
    so that these items can be used later in the build.
    -->
    <DbRowsToItems ConnectionString="$(ConnectionString)" Query="$(AppQuery)" ItemSpec="Application">
      <Output TaskParameter="Items" ItemName="Application" />
    </DbRowsToItems>
  </Target>


  <!-- 
   "All" is the target that is called by default when you only pass the project name. 
   
   Setting DependsOnTargets="LoadData" causes LoadData to execute before this target 
   can execute.
   
   Because Outputs includes %(Application.AppName), MSBuild will actually call this 
   target once for each and every application instance loaded from the database in 
   the LoadData target above.
   -->
  <Target Name="All" DependsOnTargets="LoadData" Outputs="$(OutputPath)\%(Application.AppName)\">

    <!-- Fail out in the case where there were no applications loaded -->
    <Error Code="-1" Condition="'%(Application.AppName)'==''" Text="No applications matched the search criteria." />
    
    <!-- Notify of New Application -->
    <Message Text="Next Application: '%(Application.Title)'" Importance="high" />

    <!-- Install .XAP to Emulator -->
    <WPDevice TaskAction="InstallApp" CleanInstall="true" ProductID="%(Application.ProductID)" IconPath="$(AssetsPath)\%(Application.AppName)\ApplicationIcon.png" XapPath="$(OutputPath)\%(Application.AppName).xap" />

    <!-- Launch App on Emulator -->
    <WPDevice TaskAction="LaunchApp" ProductID="%(Application.ProductID)" />

    <!-- Wait for user to finish taking screenshots -->
    <Dialog TaskAction="Show" Title="Screenshots" MessageBold="True" Button2Text="Continue" Button1Text="Stop" Text="Continue to next application?">
      <Output TaskParameter="ButtonClickedText" PropertyName="ButtonClicked" />
    </Dialog>
    <Message Text="User Clicked: $(ButtonClicked)" />
    <Error Code="-1" Condition="'$(ButtonClicked)'=='Stop'" Text="User stopped the build." />

    <!-- Uninstall App from Emulator (also Terminates) -->
    <WPDevice TaskAction="UninstallApp" ProductID="%(Application.ProductID)" />
    
    <!-- Update the LastBuilt date and time -->
    <Message Text="Updating LastBuilt in the database." Importance="high" />
    <Message Text="UPDATE $(AppTable) SET LastBuilt=Now() WHERE AppName='%(Application.AppName)'" Importance="high" />
    <OleDbExecute ConnectionString="$(ConnectionString)" TaskAction="Execute" Sql="UPDATE $(AppTable) SET LastBuilt=Now() WHERE AppName='%(Application.AppName)'" />

  </Target>
</Project>